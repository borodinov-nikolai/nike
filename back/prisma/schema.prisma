generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  login        String?
  role         Role          @default(USER)
  phoneNumber  String?
  name         String?
  surname      String?
  isActivate   Boolean?      @default(false)
  banned       Boolean?      @default(false)
  refreshToken RefreshToken?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum Role {
  ADMIN
  MODERATOR
  AUTHOR
  USER
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id              Int        @id @default(autoincrement())
  name            String
  price           Int
  gender          String
  oldPrice        Int?
  preview         Image?   @relation("ProductPreview", fields: [previewId], references: [id])
  previewId       Int?    @unique
  images          Image[]
  new             Boolean?
  hit             Boolean?
  discount        Boolean?
  description     String?
  characteristics Json[]
  categories      Category[]
  sizes           Size[]
  colors          Color[]
  materials       Material[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}




model Image {
  id        Int       @id @default(autoincrement())
  name       String
  product   Product[]
  preview   Product?  @relation("ProductPreview")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  value     String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Size {
  id        Int       @id @default(autoincrement())
  value     String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Color {
  id       Int       @id @default(autoincrement())
  name     String
  value    String
  products Product[]
}

model Material {
  id       Int       @id @default(autoincrement())
  name     String
  value    String
  products Product[]
}
